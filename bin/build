#!/usr/bin/env bash
set -eo pipefail

# 0. Setup initial values
compile_args=${BP_MESON_COMPILE_ARGS:-""}
setup_args=${BP_MESON_SETUP_ARGS:-""}
test_args=${BP_MESON_TEST_ARGS:-""}
meson_layer="${CNB_LAYERS_DIR}"/meson

echo "===> Meson buildpack is starting"
echo "Setup args are: ${setup_args}"
echo "Compile args are: ${compile_args}"
echo "Test args are: ${test_args}"

# 1. Create the layer directory
echo "Creating Meson layer..."
mkdir -p "${meson_layer}"

# 2. Setup Meson
echo "===> Setting up Meson in $(pwd)/build"
# shellcheck disable=SC2086
meson setup build ${setup_args}
cd build

# 3. Get meson properties
echo "Getting Meson properties using inspect..."
meson_name=$(meson introspect . --projectinfo | jq -r '.descriptive_name')
meson_version=$(meson introspect . --projectinfo | jq -r '.version')

# 4. Build with Meson
echo "===> Building with Meson for ${meson_name}:${meson_version}"
# shellcheck disable=SC2086
meson compile ${compile_args}
# shellcheck disable=SC2086
meson test ${test_args}
echo "===> Meson build is done"

# 5. Copy runtime files
echo "Copying runtime files..."
ls -al
find ./ -type f -name "${meson_name}" -exec cp "{}" "${meson_layer}/" \;
find ./ -type f -name "*.so" -exec cp "{}" "${meson_layer}/" \;

# 6. Tidy up workspace
echo "Tidying up workspace..."
rm -rf /workspace/*

# 7. Make meson available during launch and cache it
echo "Making layer available during launch..."
echo -e '[types]\ncache = true\nlaunch = true' > "${CNB_LAYERS_DIR}/meson.toml"

# 8. Set default start command
echo "Setting Docker entrypoint as buildpack command..."
cat > "${CNB_LAYERS_DIR}/launch.toml" << EOL
[[processes]]
type = "web"
command = ["${meson_layer}/${meson_name}"]
default = true
EOL

echo "===> Meson buildpack is done!"
